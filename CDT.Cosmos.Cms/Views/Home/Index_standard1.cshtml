@using Kendo.Mvc.UI
@model ArticleViewModel
@removeTagHelper "*, Microsoft.AspNet.Mvc.Razor"
@removeTagHelper "*, Microsoft.AspNetCore.Mvc.Razor"
@{
    Layout = "_DynamicLayout";
    ViewData["Title"] = Model.Title;
    var blobUrl = (string) ViewData["BlobEndpointUrl"];
}
@if (Model.EditModeOn)
{
    <style>
        .k-window.k-editor-widget {
            top: 50px !important;
            position: fixed;
        }

        .main-content > .k-state-active {
            background-color: inherit;
            color: inherit;
        }

        .main-content > .k-editor-inline {
            background-color: inherit;
            color: inherit;
        }
    </style>
    @(Html.Kendo()
        .Editor().Name("eContent")
        .PasteCleanup(a => a.All(true))
        .Tools(tools => tools
            .Clear()
            .Bold().Italic().Underline().Strikethrough()
            .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
            .InsertUnorderedList().InsertOrderedList()
            .Outdent().Indent()
            .CreateLink().Unlink()
            .SubScript()
            .SuperScript()
            .TableEditing()
            .Formatting()
            .InsertImage()
            .InsertFile()
            .CleanFormatting()
            .FormatPainter()
            .FontName()
            .FontSize()
            .ForeColor()
            .BackColor()
            .Print()
            .CustomButton(x => x.Name("custom").ToolTip("Hyperlink Tool").Exec("hyperLinkTool"))
        )
        .Tag("div")
        .Immutables(true)
        .Value(@<text>@Html.Raw(Model.Content)</text>)
        .ImageBrowser(imageBrowser => imageBrowser
            .Image(blobUrl + "{0}")
            .Read("FileBrowserRead", "FileManager")
            .FileTypes(AllowedFileExtensions.GetFilterForViews(AllowedFileExtensions.ExtensionCollectionType.ImageUploads))
        )
        .FileBrowser(fileBrowser => fileBrowser
            .File(blobUrl + "{0}")
            .Read("FileBrowserRead", "FileManager")
            .FileTypes(AllowedFileExtensions.GetFilterForViews(AllowedFileExtensions.ExtensionCollectionType.FileUploads))
        ))
    <script>
        function hyperLinkTool(e) {
            var t = e;
            var editor = $(this).data("kendoEditor");
            //var n = e.sender.value();
            var html = editor.selectedHtml();
            //editor.exec("inserthtml", { value: "<hr />" });
        }
    </script>
    <kendo-window name="window"
                  title="Rams's Ten Principles of Good Design"
                  draggable="true"
                  resizable="true"
                  width="600"
                  on-close="onClose"
                  actions="actions">
        <content>
            loading user info...
        </content>
        <popup-animation enabled="false" />
    </kendo-window>
}
else
{
    @Html.Raw(Model.Content)
}
@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
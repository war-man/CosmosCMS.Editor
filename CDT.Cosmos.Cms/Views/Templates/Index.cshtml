@using Kendo.Mvc.UI
@{
    Layout = "_Layout";
    ViewData["Title"] = "Page Template List";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <p>Page templates are pre-build web pages that can help quickly build your website.</p>
            <p>Create a new template by clicking &quot;New&quot; below.</p>
        </div>
    </div>
    <div class="row">
        @(Html.Kendo().Grid<TemplateIndexViewModel>().Name("grid")
            .Columns(columns =>
            {
                columns.Command(command =>
                {
                    command.Custom("Code").Click("editDetails").IconClass("fa fa-edit").Text(" ");
                    command.Custom("Preview").Click("clickPreview");
                    command.Custom("Preview Edit").Click("clickEditPreview");
                }).Width(300);
                columns.Bound(m => m.Id).Hidden(true);
                columns.Bound(m => m.Title);
                columns.Bound(m => m.Description);
                columns.Command(command => { command.Destroy(); });
            })
            .ToolBar(toolbar =>
            {
                toolbar.Save().SaveText("Save");
                toolbar.Create().Text("New");
            })
            .HtmlAttributes(new {style = "width:100%;"})
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Pageable()
            .Navigatable()
            .Sortable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .ServerOperation(false)
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => p.Id))
                .Create("Templates_Create", "Templates")
                .Read("Templates_Read", "Templates")
                .Update("Templates_Update", "Templates")
                .Destroy("Templates_Destroy", "Templates")
            )
            )
    </div>
</div>
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors,
                function(key, value) {
                    if ('errors' in value) {
                        $.each(value.errors,
                            function() {
                                message += this + "\n";
                            });
                    }
                });
            alert(message);
        }
    }

    function editDetails(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location = "@Url.Action("EditCode")/" + dataItem.Id;
    }

    function clickPreview(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.open("@Url.Action("Preview")/" + dataItem.Id);
    }

    function clickEditPreview(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.open("@Url.Action("PreviewEdit")/" + dataItem.Id);
    }

</script>
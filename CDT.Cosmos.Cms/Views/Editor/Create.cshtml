@using Kendo.Mvc.UI
@model CreatePageViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Create";
    Html.ViewContext.ViewBag.BrowserTitle = "Create";
}
<div id="main-content" class="main-content">
    <main class="main-primary">
        <div class="row">
            <div class="col-md-6">
                <h1>Create a Page</h1>
                <hr/>
                <form asp-action="Create">
                    <input asp-for="Id" type="hidden"/>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        @(Html.Kendo()
                            .TextBoxFor(m => m.Title)
                            .Placeholder("Enter a unique title here").HtmlAttributes(new {style = "width:100%"})
                            )
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    @if (ViewData["Teams"] != null)
                    {
                        <div class="form-group">
                            <label asp-for="TeamId" class="control-label">Team Name</label>
                            @(Html.Kendo()
                                .ComboBoxFor(m => m.TeamId)
                                .DataValueField("Id")
                                .DataTextField("TeamName")
                                .Placeholder("* Choose a team *")
                                .BindTo((List<TeamViewModel>) ViewData["Teams"])
                                )
                            <span asp-validation-for="TeamId" class="text-danger"></span>
                        </div>
                    }

                    <div class="form-group">
                        <label asp-for="TemplateId" class="control-label"></label>
                        @(Html.Kendo()
                            .DropDownListFor(m => m.TemplateId)
                            .OptionLabel("Select a template (optional)...")
                            .DataTextField("Text")
                            .DataValueField("Value").HtmlAttributes(new {style = "width:100%"})
                            .Events(e => e.Change("onChangeTemplate"))
                            .BindTo(Model.Templates)
                            )
                        <span asp-validation-for="TemplateId" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <input type="submit" value="Create" class="btn btn-primary"/>
                    </div>
                </form>
            </div>
            <div class="col-md-6">
                <div id="divNotes"></div>
            </div>
        </div>

        <div>
            <a asp-action="Index">Back to List</a>
        </div>
        <h4>Template preview:</h4>
        <iframe id="ifPreview" style="background-image: url('https://beta.template.webstandards.ca.gov/images/main-banner9.jpg'); height: 100%; min-height: 600px; width: 100%;">
        </iframe>
    </main>
</div>
<script>
    "use strict";

    function onChangeTemplate() {
        var iframe = $("#ifPreview");
        if (iframe.length) {
            var templateId = $("#TemplateId").val();
            if (typeof(templateId) !== "undefined" && templateId !== null && templateId !== "") {
                var url = "@Url.Action("Preview", "Templates")/" + templateId;
                iframe.attr('src', url);
            } else {
                iframe.attr('src', '');
            }
        }
    }
</script>
@{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
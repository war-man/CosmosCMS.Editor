@using Kendo.Mvc.UI
@using Microsoft.AspNetCore.Identity
@model IdentityRole
@{
    ViewData["Title"] = "Index";
}

<main class="main-primary">
    <div class="container">
        <h2>Role: @Model.Name</h2>
        <p>Use this list to add or remove people from this role.</p>
        <a class="btn btn-sm btn-primary" asp-action="Roles">Role List</a>
        @(Html.Kendo().Grid<UserItemViewModel>().Name("grid")
            .Columns(col =>
            {
                col.Bound(b => b.Id).Hidden();
                col.Bound(b => b.Selected).ClientTemplate("#= isChecked(Selected) #").Width(90);
                col.Bound(b => b.Email);
                col.Bound(b => b.EmailConfirmed).ClientTemplate("#= isChecked(EmailConfirmed) #");
                col.Bound(b => b.PhoneNumber);
            })
            .ToolBar(toolbar => {
                toolbar.Save();
            })
            .Editable(editable => editable.Mode(GridEditMode.InCell))
            .Pageable()
            .Navigatable()
            .Sortable()
            .Events(events => events.Sort("onSort"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .ServerOperation(false)
                .Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(f => f.Email).Editable(false);
                })
                .Read("Read_Users", "Users", new { roleId = Model.Id})
                .Update("Users_Update", "Users", new { roleId = Model.Id})
            ))
    </div>
</main>
<script type="text/javascript">

    function isChecked(selected) {
        if (selected === true) {
            return "<input type=\"checkbox\" checked>";
        }
        return "<input type=\"checkbox\">";
    }

    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors,
                function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors,
                            function () {
                                message += this + "\n";
                            });
                    }
                });
            alert(message);
        }
    }

    // Prevent sorting when new record without Product Name is added
    function onSort(e) {
        var gridData = e.sender.dataSource.data();
        gridData.forEach(function (element) {
            if (!element.Name) {
                e.preventDefault();
            }
        });
    }

</script>
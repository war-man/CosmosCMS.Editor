@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Teams";
}

@(Html.Kendo().Grid<TeamViewModel>()
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Title("Team #").Width(80);
        columns.Template($"<a class=\"btn btn-sm btn-secondary\" href=\"{Url.Action("Membership", "Teams")}/#: Id #\" title=\"Team Members\">Members</span></a>").Width(100);
        columns.Bound(p => p.TeamName);
        columns.Bound(p => p.TeamDescription);
        columns.Command(command => command.Destroy()).Width(100);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create().Text("Add Team");
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Navigatable()
    .Sortable()
    .Scrollable()
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.Id))
        .Create("Teams_Create", "Teams")
        .Read("Teams_Read", "Teams")
        .Update("Teams_Update", "Teams")
        .Destroy("Teams_Destroy", "Teams")
    )
    )
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors,
                function(key, value) {
                    if ('errors' in value) {
                        $.each(value.errors,
                            function() {
                                message += this + "\n";
                            });
                    }
                });
            alert(message);
        }
    }

</script>